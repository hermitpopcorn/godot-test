[gd_scene load_steps=46 format=2]

[ext_resource path="res://dynamic-fonts/hpap-numbers.tres" type="DynamicFont" id=1]
[ext_resource path="res://images/ui/party_panel.png" type="Texture" id=2]
[ext_resource path="res://images/ui/stat_bar-over.png" type="Texture" id=3]
[ext_resource path="res://components/text_theme.tres" type="Theme" id=4]
[ext_resource path="res://dynamic-fonts/status_dice_display.tres" type="DynamicFont" id=5]
[ext_resource path="res://scripts/member_status_panel.gd" type="Script" id=6]
[ext_resource path="res://dynamic-fonts/hpap-labels.tres" type="DynamicFont" id=7]
[ext_resource path="res://addons/shaderV/rgba/shineFX.gd" type="Script" id=8]
[ext_resource path="res://addons/shaderV/rgba/shiftHSV.gd" type="Script" id=9]
[ext_resource path="res://images/ui/anims_overlays/party_panel_buff.png" type="Texture" id=10]
[ext_resource path="res://images/ui/anims_overlays/party_panel_damage_red.png" type="Texture" id=11]
[ext_resource path="res://dynamic-fonts/hpap-flying_numbers.tres" type="DynamicFont" id=12]

[sub_resource type="VisualShaderNodeScalarFunc" id=23]
function = 27

[sub_resource type="VisualShaderNodeScalarConstant" id=24]
constant = 90.0

[sub_resource type="VisualShaderNodeScalarConstant" id=25]
constant = 0.626

[sub_resource type="VisualShaderNodeColorUniform" id=26]
uniform_name = "shine_color"

[sub_resource type="VisualShaderNodeScalarUniform" id=27]
uniform_name = "shine_width"

[sub_resource type="VisualShaderNodeScalarUniform" id=28]
uniform_name = "shine_location"

[sub_resource type="VisualShaderNodeIf" id=33]

[sub_resource type="VisualShaderNodeColorConstant" id=34]

[sub_resource type="VisualShaderNodeScalarConstant" id=35]

[sub_resource type="ImageTexture" id=36]

[sub_resource type="VisualShaderNodeTexture" id=15]
source = 2
texture = SubResource( 36 )

[sub_resource type="VisualShaderNodeCustom" id=19]
default_input_values = [ 3, 0.0, 4, 0.0, 5, 0.0, 6, 0.0, 7, 0.0, 8, 0.0, 9, Vector3( 1, 1, 1 ) ]
initialized = true
script = ExtResource( 8 )

[sub_resource type="VisualShaderNodeInput" id=20]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarConstant" id=22]
constant = 1.0

[sub_resource type="VisualShader" id=17]
code = "shader_type canvas_item;
uniform float shine_location;
uniform float shine_width;
uniform vec4 shine_color : hint_color;


// ShineFX

vec4 shineFunc(vec4 _color_sh1ne, vec2 _uv_sh1ne, float _loc_sh1ne, float _rot_sh1ne, float _width_sh1ne, float _soft_sh1ne, float _bright_sh1ne, float _gloss_sh1ne, vec3 _shine_color_sh1ne){
	vec2 _angle_sh1ne = vec2(cos(_rot_sh1ne), sin(_rot_sh1ne));
	float _norm_pos_sh1ne = dot(_uv_sh1ne, _angle_sh1ne);
	float _normal_sh1ne = 1.0 - min(max(abs((_norm_pos_sh1ne - _loc_sh1ne) / _width_sh1ne), 0.0), 1.0);
	float _shine_power_sh1ne = smoothstep(0.0, _soft_sh1ne * 2.0, _normal_sh1ne);
	vec3 _reflect_color_sh1ne = mix(vec3(1.0), _color_sh1ne.rgb * 10.0, _gloss_sh1ne);
	_color_sh1ne.rgb += _color_sh1ne.a * _shine_power_sh1ne * _bright_sh1ne * _reflect_color_sh1ne * _shine_color_sh1ne.rgb;
	return min(max(_color_sh1ne, vec4(0.0)), vec4(1.0));
}


void vertex() {
// Output:0

}

void fragment() {
// Input:6
	vec3 n_out6p0 = vec3(UV, 0.0);

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// ScalarUniform:18
	float n_out18p0 = shine_location;

// Scalar:13
	float n_out13p0 = 90.000000;

// ScalarFunc:12
	float n_out12p0 = radians(n_out13p0);

// ScalarUniform:17
	float n_out17p0 = shine_width;

// Scalar:14
	float n_out14p0 = 0.626000;

// Scalar:8
	float n_out8p0 = 1.000000;

// ColorUniform:15
	vec3 n_out15p0 = shine_color.rgb;
	float n_out15p1 = shine_color.a;

// ShineFX:5
	float n_in5p8 = 0.00000;
	vec3 n_out5p0;
	float n_out5p1;
	{
		n_out5p1 = n_out3p1;
		n_out5p0 = shineFunc(vec4(n_out3p0, n_out3p1), n_out6p0.xy, n_out18p0, n_out12p0, n_out17p0, n_out14p0, n_out8p0, n_in5p8, n_out15p0).rgb;
	}

// Color:20
	vec3 n_out20p0 = vec3(1.000000, 1.000000, 1.000000);
	float n_out20p1 = 1.000000;

// Scalar:21
	float n_out21p0 = 0.000000;

// If:19
	float n_in19p2 = 0.00001;
	vec3 n_out19p0;
	if(abs(dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333)) - dot(n_out20p0, vec3(0.333333, 0.333333, 0.333333))) < n_in19p2)
	{
		n_out19p0 = vec3(n_out21p0);
	}
	else if(dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333)) < dot(n_out20p0, vec3(0.333333, 0.333333, 0.333333)))
	{
		n_out19p0 = vec3(n_out5p1);
	}
	else
	{
		n_out19p0 = vec3(n_out5p1);
	}

// Output:0
	COLOR.rgb = n_out5p0;
	COLOR.a = dot(n_out19p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -471, 132 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 660, 120 )
nodes/fragment/3/node = SubResource( 15 )
nodes/fragment/3/position = Vector2( -400, 80 )
nodes/fragment/5/node = SubResource( 19 )
nodes/fragment/5/position = Vector2( 40, 120 )
nodes/fragment/6/node = SubResource( 20 )
nodes/fragment/6/position = Vector2( -200, 60 )
nodes/fragment/8/node = SubResource( 22 )
nodes/fragment/8/position = Vector2( -440, 400 )
nodes/fragment/12/node = SubResource( 23 )
nodes/fragment/12/position = Vector2( -240, 260 )
nodes/fragment/13/node = SubResource( 24 )
nodes/fragment/13/position = Vector2( -440, 260 )
nodes/fragment/14/node = SubResource( 25 )
nodes/fragment/14/position = Vector2( -220, 340 )
nodes/fragment/15/node = SubResource( 26 )
nodes/fragment/15/position = Vector2( -200, 400 )
nodes/fragment/17/node = SubResource( 27 )
nodes/fragment/17/position = Vector2( -420, 320 )
nodes/fragment/18/node = SubResource( 28 )
nodes/fragment/18/position = Vector2( -480, 200 )
nodes/fragment/19/node = SubResource( 33 )
nodes/fragment/19/position = Vector2( 440, 160 )
nodes/fragment/20/node = SubResource( 34 )
nodes/fragment/20/position = Vector2( 260, 60 )
nodes/fragment/21/node = SubResource( 35 )
nodes/fragment/21/position = Vector2( 240, 200 )
nodes/fragment/connections = PoolIntArray( 12, 0, 5, 4, 13, 0, 12, 0, 14, 0, 5, 6, 8, 0, 5, 7, 17, 0, 5, 5, 15, 0, 5, 9, 18, 0, 5, 3, 6, 0, 5, 0, 3, 0, 5, 1, 5, 0, 0, 0, 3, 1, 5, 2, 5, 0, 19, 0, 20, 0, 19, 1, 21, 0, 19, 3, 19, 0, 0, 1, 5, 1, 19, 4, 5, 1, 19, 5 )

[sub_resource type="ShaderMaterial" id=18]
resource_local_to_scene = true
shader = SubResource( 17 )
shader_param/shine_location = null
shader_param/shine_width = null
shader_param/shine_color = Color( 0, 1, 0, 1 )

[sub_resource type="GDScript" id=37]
script/source = "extends TextureRect

func set_shine_width(to: float): self.get_material().set_shader_param(\"shine_width\", to)
func set_shine_location(to: float): self.get_material().set_shader_param(\"shine_location\", to)
func set_shine_color(to: Color): self.get_material().set_shader_param(\"shine_color\", to)

func _ready():
	set_shine_width(0.0)
	set_shine_location(-2.0)
"

[sub_resource type="VisualShaderNodeCustom" id=38]
default_input_values = [ 1, 1.0, 2, 1.0, 3, 1.0 ]
initialized = true
script = ExtResource( 9 )

[sub_resource type="VisualShaderNodeTexture" id=42]
source = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=43]
constant = 1.564

[sub_resource type="VisualShaderNodeScalarUniform" id=44]
uniform_name = "hue"

[sub_resource type="VisualShader" id=40]
resource_local_to_scene = true
code = "shader_type canvas_item;
uniform float hue;


// ShiftHSV

vec3 hsv2rgbHSVChan9eFunc(vec3 _hsv_c0l0r_HSVChan9e){
	vec4 _K_hsv2rgbHSVChan9e = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
	vec3 _p_hsv2rgbHSVChan9e = abs(fract(_hsv_c0l0r_HSVChan9e.xxx + _K_hsv2rgbHSVChan9e.xyz) * 6.0 - _K_hsv2rgbHSVChan9e.www);
	return vec3(_hsv_c0l0r_HSVChan9e.z * mix(_K_hsv2rgbHSVChan9e.xxx, 
				clamp(_p_hsv2rgbHSVChan9e - _K_hsv2rgbHSVChan9e.xxx, 0.0, 1.0),
				_hsv_c0l0r_HSVChan9e.y));
}

vec3 rgb2hvsHSVChan9eFunc(vec3 _rgb_c0l0r_HSVChan9e){
	vec4 _K_rgb2hvsHSVChan9e = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
	vec4 _p_rgb2hvsHSVChan9e = mix( vec4(_rgb_c0l0r_HSVChan9e.bg, _K_rgb2hvsHSVChan9e.wz),
									vec4(_rgb_c0l0r_HSVChan9e.gb, _K_rgb2hvsHSVChan9e.xy),
									step(_rgb_c0l0r_HSVChan9e.b, _rgb_c0l0r_HSVChan9e.g));
	vec4 _q_rgb2hvsHSVChan9e = mix( vec4(_p_rgb2hvsHSVChan9e.xyw, _rgb_c0l0r_HSVChan9e.r), 
									vec4(_rgb_c0l0r_HSVChan9e.r, _p_rgb2hvsHSVChan9e.yzx),
									step(_p_rgb2hvsHSVChan9e.x, _rgb_c0l0r_HSVChan9e.r));
	float _d_rgb2hvsHSVChan9e = _q_rgb2hvsHSVChan9e.x - min(_q_rgb2hvsHSVChan9e.w, _q_rgb2hvsHSVChan9e.y);
	return vec3(vec3(abs(_q_rgb2hvsHSVChan9e.z + (_q_rgb2hvsHSVChan9e.w - _q_rgb2hvsHSVChan9e.y) / (6.0 * _d_rgb2hvsHSVChan9e + 1.0e-10)),
					_d_rgb2hvsHSVChan9e / (_q_rgb2hvsHSVChan9e.x + 1.0e-10),
					_q_rgb2hvsHSVChan9e.x));
}

vec3 hsvChangeHSVChan9eFunc(vec3 _c0l0r_HSVChan9e, float _h_HSVChan9e, float _s_HSVChan9e, float _v_HSVChan9e){
	_c0l0r_HSVChan9e = rgb2hvsHSVChan9eFunc(_c0l0r_HSVChan9e);
	_c0l0r_HSVChan9e.r *= _h_HSVChan9e;
	_c0l0r_HSVChan9e.g *= _s_HSVChan9e;
	_c0l0r_HSVChan9e.b *= _v_HSVChan9e;
	return hsv2rgbHSVChan9eFunc(_c0l0r_HSVChan9e);
}


void vertex() {
// Output:0

}

void fragment() {
// Texture:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out6p0 = _tex_read.rgb;
		n_out6p1 = _tex_read.a;
	}

// ScalarUniform:8
	float n_out8p0 = hue;

// Scalar:7
	float n_out7p0 = 1.564000;

// ShiftHSV:2
	vec3 n_out2p0;
	{
		n_out2p0 = hsvChangeHSVChan9eFunc(n_out6p0, n_out8p0, n_out7p0, n_out7p0);
	}

// Output:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out6p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -471, 132 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 420, 140 )
nodes/fragment/2/node = SubResource( 38 )
nodes/fragment/2/position = Vector2( 200, 220 )
nodes/fragment/6/node = SubResource( 42 )
nodes/fragment/6/position = Vector2( -160, 120 )
nodes/fragment/7/node = SubResource( 43 )
nodes/fragment/7/position = Vector2( -40, 320 )
nodes/fragment/8/node = SubResource( 44 )
nodes/fragment/8/position = Vector2( -80, 260 )
nodes/fragment/connections = PoolIntArray( 6, 0, 2, 0, 2, 0, 0, 0, 7, 0, 2, 2, 7, 0, 2, 3, 6, 1, 0, 1, 8, 0, 2, 1 )

[sub_resource type="ShaderMaterial" id=45]
resource_local_to_scene = true
shader = SubResource( 40 )
shader_param/hue = null

[sub_resource type="Gradient" id=5]
colors = PoolColorArray( 0, 0.494118, 0.329412, 1, 0, 0.713726, 0.478431, 1 )

[sub_resource type="GradientTexture" id=6]
gradient = SubResource( 5 )

[sub_resource type="Gradient" id=9]
colors = PoolColorArray( 0.0156863, 0.0313726, 0.0823529, 1, 0.027451, 0.0784314, 0.25098, 1 )

[sub_resource type="GradientTexture" id=4]
gradient = SubResource( 9 )

[sub_resource type="Gradient" id=10]
colors = PoolColorArray( 0.611765, 0.611765, 0.611765, 1, 0.952941, 0.94902, 0.94902, 1 )

[sub_resource type="GradientTexture" id=11]
gradient = SubResource( 10 )

[sub_resource type="Gradient" id=7]
colors = PoolColorArray( 0.482353, 0.521569, 0.00784314, 1, 0.87451, 0.901961, 0.00784314, 1 )

[sub_resource type="GradientTexture" id=8]
gradient = SubResource( 7 )

[sub_resource type="Gradient" id=12]
offsets = PoolRealArray( 0 )
colors = PoolColorArray( 0.313726, 0.0235294, 0.0235294, 1 )

[sub_resource type="GradientTexture" id=13]
gradient = SubResource( 12 )

[node name="MemberStatus" type="Control"]
margin_left = 730.0
margin_right = 1190.0
margin_bottom = 150.0
rect_min_size = Vector2( 460, 0 )
size_flags_vertical = 3
script = ExtResource( 6 )

[node name="Panel" type="Panel" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="PanelBackground" type="TextureRect" parent="Panel"]
material = SubResource( 18 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 2 )
expand = true
script = SubResource( 37 )

[node name="PanelOverlays" type="Control" parent="Panel"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="DamageFlashRect" type="TextureRect" parent="Panel/PanelOverlays"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_horizontal = 3
size_flags_vertical = 3
texture = ExtResource( 11 )
expand = true
stretch_mode = 1

[node name="BuffOverlayRect" type="TextureRect" parent="Panel/PanelOverlays"]
visible = false
self_modulate = Color( 1, 1, 1, 0.705882 )
material = SubResource( 45 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 10 )
expand = true

[node name="VBoxContainer" type="VBoxContainer" parent="Panel"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
alignment = 2
__meta__ = {
"_edit_lock_": true
}

[node name="MarginContainer" type="MarginContainer" parent="Panel/VBoxContainer"]
margin_right = 460.0
margin_bottom = 105.0
mouse_filter = 2
size_flags_horizontal = 3
size_flags_vertical = 3
custom_constants/margin_right = 20
custom_constants/margin_left = 20

[node name="Name" type="Label" parent="Panel/VBoxContainer/MarginContainer"]
margin_left = 20.0
margin_right = 440.0
margin_bottom = 105.0
size_flags_horizontal = 3
size_flags_vertical = 3
theme = ExtResource( 4 )
valign = 1
clip_text = true

[node name="HBoxContainer" type="HBoxContainer" parent="Panel/VBoxContainer"]
margin_top = 109.0
margin_right = 460.0
margin_bottom = 150.0
grow_vertical = 0
rect_min_size = Vector2( 0, 20 )
mouse_filter = 2
alignment = 1

[node name="HPContainer" type="VBoxContainer" parent="Panel/VBoxContainer/HBoxContainer"]
margin_right = 228.0
margin_bottom = 41.0
mouse_filter = 2
size_flags_horizontal = 3
custom_constants/separation = -8
alignment = 2

[node name="CenterContainer" type="CenterContainer" parent="Panel/VBoxContainer/HBoxContainer/HPContainer"]
margin_right = 228.0
margin_bottom = 35.0
mouse_filter = 2

[node name="HPNumber" type="Label" parent="Panel/VBoxContainer/HBoxContainer/HPContainer/CenterContainer"]
margin_left = 93.0
margin_right = 135.0
margin_bottom = 35.0
custom_fonts/font = ExtResource( 1 )
text = "50"

[node name="HPBar" type="TextureProgress" parent="Panel/VBoxContainer/HBoxContainer/HPContainer"]
margin_top = 27.0
margin_right = 228.0
margin_bottom = 41.0
rect_min_size = Vector2( 0, 14 )
mouse_filter = 2
value = 60.0
texture_over = ExtResource( 3 )
texture_progress = SubResource( 6 )
tint_over = Color( 0.0235294, 0.0627451, 0.188235, 1 )
nine_patch_stretch = true

[node name="Change" type="TextureProgress" parent="Panel/VBoxContainer/HBoxContainer/HPContainer/HPBar"]
show_behind_parent = true
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
value = 80.0
allow_lesser = true
texture_under = SubResource( 4 )
texture_progress = SubResource( 11 )
tint_under = Color( 1, 1, 1, 0.588235 )
nine_patch_stretch = true

[node name="MarginContainer" type="MarginContainer" parent="Panel/VBoxContainer/HBoxContainer/HPContainer/HPBar"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
size_flags_horizontal = 3
size_flags_vertical = 3
custom_constants/margin_right = 6
custom_constants/margin_top = -6
custom_constants/margin_left = 6
custom_constants/margin_bottom = -1

[node name="HPLabel" type="Label" parent="Panel/VBoxContainer/HBoxContainer/HPContainer/HPBar/MarginContainer"]
margin_left = 6.0
margin_top = -5.0
margin_right = 222.0
margin_bottom = 15.0
grow_horizontal = 0
grow_vertical = 0
size_flags_vertical = 8
custom_fonts/font = ExtResource( 7 )
text = "HP"

[node name="APContainer" type="VBoxContainer" parent="Panel/VBoxContainer/HBoxContainer"]
margin_left = 232.0
margin_right = 460.0
margin_bottom = 41.0
mouse_filter = 2
size_flags_horizontal = 3
custom_constants/separation = -8
alignment = 2

[node name="CenterContainer" type="CenterContainer" parent="Panel/VBoxContainer/HBoxContainer/APContainer"]
margin_right = 228.0
margin_bottom = 35.0
mouse_filter = 2

[node name="APNumber" type="Label" parent="Panel/VBoxContainer/HBoxContainer/APContainer/CenterContainer"]
margin_left = 93.0
margin_right = 135.0
margin_bottom = 35.0
custom_fonts/font = ExtResource( 1 )
text = "50"

[node name="APBar" type="TextureProgress" parent="Panel/VBoxContainer/HBoxContainer/APContainer"]
margin_top = 27.0
margin_right = 228.0
margin_bottom = 41.0
rect_min_size = Vector2( 0, 14 )
mouse_filter = 2
value = 60.0
texture_over = ExtResource( 3 )
texture_progress = SubResource( 8 )
tint_over = Color( 0.0235294, 0.0627451, 0.188235, 1 )
nine_patch_stretch = true

[node name="Change" type="TextureProgress" parent="Panel/VBoxContainer/HBoxContainer/APContainer/APBar"]
show_behind_parent = true
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
value = 80.0
allow_lesser = true
texture_under = SubResource( 4 )
texture_progress = SubResource( 11 )
tint_under = Color( 1, 1, 1, 0.588235 )
nine_patch_stretch = true

[node name="MarginContainer" type="MarginContainer" parent="Panel/VBoxContainer/HBoxContainer/APContainer/APBar"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
size_flags_horizontal = 3
size_flags_vertical = 3
custom_constants/margin_right = 6
custom_constants/margin_top = -6
custom_constants/margin_left = 6
custom_constants/margin_bottom = -1

[node name="APLabel" type="Label" parent="Panel/VBoxContainer/HBoxContainer/APContainer/APBar/MarginContainer"]
margin_left = 6.0
margin_top = -5.0
margin_right = 222.0
margin_bottom = 15.0
grow_horizontal = 0
grow_vertical = 0
size_flags_vertical = 8
custom_fonts/font = ExtResource( 7 )
text = "AP"

[node name="DiceNumber" type="Label" parent="Panel"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -96.0
margin_bottom = 96.0
size_flags_vertical = 8
custom_fonts/font = ExtResource( 5 )
align = 1
valign = 1
uppercase = true
__meta__ = {
"_edit_lock_": true
}

[node name="FullOverlays" type="Control" parent="Panel"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
__meta__ = {
"_edit_lock_": true
}

[node name="DeadOverlayRect" type="TextureRect" parent="Panel/FullOverlays"]
visible = false
modulate = Color( 1, 1, 1, 0.411765 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
size_flags_horizontal = 3
size_flags_vertical = 3
texture = SubResource( 13 )
expand = true

[node name="FlyingTexts" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_lock_": true
}

[node name="Sample" type="Label" parent="FlyingTexts"]
visible = false
anchor_left = 0.5
anchor_right = 0.5
margin_left = -318.5
margin_right = 318.5
margin_bottom = 61.0
custom_fonts/font = ExtResource( 12 )
text = "WHAT DON'T SEE THIS"
align = 1
valign = 1

[node name="Tweens" type="Tween" parent="."]

[node name="BuffTween" type="Tween" parent="Tweens"]

[node name="DamageFlashTween" type="Tween" parent="Tweens"]

[node name="HPBarTween" type="Tween" parent="Tweens"]

[node name="APBarTween" type="Tween" parent="Tweens"]

[node name="ShakeTween" type="Tween" parent="Tweens"]

[node name="FlyingTextTween" type="Tween" parent="Tweens"]

[connection signal="tween_all_completed" from="Tweens/BuffTween" to="." method="_on_BuffTween_tween_all_completed"]
[connection signal="tween_completed" from="Tweens/DamageFlashTween" to="." method="_on_DamageFlashTween_tween_completed"]
[connection signal="tween_completed" from="Tweens/ShakeTween" to="." method="_on_ShakeTween_tween_completed"]
[connection signal="tween_completed" from="Tweens/FlyingTextTween" to="." method="_on_FlyingTextTween_tween_completed"]

[gd_scene load_steps=14 format=2]

[ext_resource path="res://components/event_processor.tscn" type="PackedScene" id=1]
[ext_resource path="res://images/ui/paused.png" type="Texture" id=2]
[ext_resource path="res://images/ui/cursor/cursor_outside.png" type="Texture" id=3]
[ext_resource path="res://images/ui/cursor/cursor_inside.png" type="Texture" id=4]
[ext_resource path="res://fonts/montreal/Montreal.tres" type="DynamicFont" id=5]
[ext_resource path="res://shaders/hue_shift.shader" type="Shader" id=6]

[sub_resource type="GDScript" id=1]
script/source = "extends \"res://scripts/base_scene.gd\"
"

[sub_resource type="GDScript" id=2]
script/source = "extends TextureRect

func _input(event):
	if (self.visible):
		if event.is_action_pressed(\"ui_cancel\"):
			$PauseTween.remove_all()
			$PauseTween.interpolate_property(self, 'modulate:a', 1, 0, 0.1, Tween.TRANS_LINEAR, Tween.EASE_OUT_IN)
			$PauseTween.start()

func _on_tween_all_completed():
	self.visible = false

func _on_visibility_changed():
	if (self.visible):
		# Make sure we're really visible
		self.modulate.a = 1
	else:
		get_tree().paused = false
"

[sub_resource type="GDScript" id=3]
script/source = "extends CanvasLayer

var hovered_items: Array = []
var snapping: bool = false

signal show_info_text
signal hide_info_text

func _ready():
	pass

func _process(_delta):
	# Follow mouse
	var mouse_pos = get_viewport().get_mouse_position()
	if (mouse_pos.x != 0 && mouse_pos.y != 0):
		$CursorSprite.position = get_viewport().get_mouse_position()
	
	if ($CursorSprite/CursorSpriteOutside.rotation_degrees >= 360):
		$CursorSprite/CursorSpriteOutside.rotation_degrees -= 360
	if ($CursorSprite/CursorSpriteInside.rotation_degrees <= -360):
		$CursorSprite/CursorSpriteInside.rotation_degrees += 360
	
	if (!self.check_hovering()):
		# Rotate a little
		$CursorSprite/CursorSpriteOutside.rotation_degrees += 0.5
		self.snapping = false
	else:
		# Set to snap to nearest angle
		self.snapping = true
	
	if (self.snapping):
		# Snap back to nearest angle (outside)
		var over_times = floor(abs($CursorSprite/CursorSpriteOutside.rotation_degrees) / 90)
		var degrees_remaining = abs($CursorSprite/CursorSpriteOutside.rotation_degrees) - (90 * over_times)
		if (degrees_remaining >= 45):
			$CursorSprite/CursorSpriteOutside.rotation_degrees += min(7, degrees_remaining)
		else:
			$CursorSprite/CursorSpriteOutside.rotation_degrees -= min(7, degrees_remaining)	
		# Shrink
		if ($CursorSprite.scale.x > 0.75):
			$CursorSprite.scale.x -= 0.05
			$CursorSprite.scale.y -= 0.05
		# Hue shift
		$CursorSprite/CursorSpriteOutside.get_material().set_shader_param('shift_amount', 0.1)
		$CursorSprite/CursorSpriteInside.get_material().set_shader_param('shift_amount', 0.1)
	else:
		# Back to normal size
		if ($CursorSprite.scale.x < 1):
			$CursorSprite.scale.x += 0.05
			$CursorSprite.scale.y += 0.05
		# Shift back hue
		$CursorSprite/CursorSpriteOutside.get_material().set_shader_param('shift_amount', 0)
		$CursorSprite/CursorSpriteInside.get_material().set_shader_param('shift_amount', 0)

func check_hovering() -> bool:
	if (self.hovered_items.size() == 0): return false
	
	if (self.get_parent().check_event_processor_running()):
		if (!self.hovered_items.has('MessageBox')): return false
	
	return true

func _on_hover(emitter, text=null):
	if (!self.hovered_items.has(emitter)):
		self.hovered_items.append(emitter)
	if (text):
		self.emit_signal(\"show_info_text\", text)

func _off_hover(emitter, text=null):
	if (emitter == \"*\"):
		self.hovered_items.clear()
		self.emit_signal(\"hide_info_text\", \"*\")
	else:
		var index = self.hovered_items.find(emitter)
		if (index > -1):
			self.hovered_items.remove(index)
		if (text):
			self.emit_signal(\"hide_info_text\", text)
"

[sub_resource type="ShaderMaterial" id=4]
shader = ExtResource( 6 )
shader_param/shift_amount = null

[sub_resource type="ShaderMaterial" id=5]
shader = ExtResource( 6 )
shader_param/shift_amount = null

[sub_resource type="GDScript" id=6]
script/source = "extends CanvasLayer

var active_text: String
var diamond_stripe_active: bool = false

func _process(_delta):
	if (self.get_parent().check_event_processor_running() && self.diamond_stripe_active && self.active_text):
		self.temp_hide_diamond_stripe()
	elif (!self.get_parent().check_event_processor_running() && !self.diamond_stripe_active && self.active_text):
		self.reshow_diamond_stripe()

func temp_hide_diamond_stripe():
	self.diamond_stripe_active = false
	$Microtimer.start(); yield($Microtimer, \"timeout\")
	$DiamondStripe.hide_diamond_stripe()

func reshow_diamond_stripe():
	self.diamond_stripe_active = true
	self._on_CursorLayer_show_info_text(self.active_text)

func _on_CursorLayer_show_info_text(text):
	# Calculate rect size by simulating it on a dummy node
	var rect_calculator = $DiamondStripe/TextRect/RectCalculator
	rect_calculator.text = \"\"
	rect_calculator.rect_size = Vector2(0, rect_calculator.rect_size.y)
	rect_calculator.text = text
	rect_calculator.visible_characters = -1
	$Microtimer.start(); yield($Microtimer, \"timeout\")
	
	self.active_text = text
	var length: int = int(ceil(2 + (rect_calculator.rect_size.x / 35)))
	if (length % 2) == 1:
		length += 1
	$DiamondStripe.show_diamond_stripe(length, text)
	self.diamond_stripe_active = true

func _on_CursorLayer_hide_info_text(text):
	$Microtimer.start(); yield($Microtimer, \"timeout\")
	self.active_text = \"\"
	$DiamondStripe.hide_diamond_stripe()
	self.diamond_stripe_active = false
"

[sub_resource type="GDScript" id=7]
script/source = "extends Node2D

export var size: float = 36.512 # Size of the diamonds
export var fade_speed: float = 0.01 # Speed of diamond fade. Smaller = faster

func show_diamond_stripe(length, text):
	create_stripe(length)
	show_stripe()
	show_text(text)

func hide_diamond_stripe():
	hide_stripe()
	hide_text()

func create_diamond_node():
	var node: Sprite = Sprite.new()
	node.texture = load(\"res://images/ui/diamond.png\")
	node.scale = Vector2(0.14, 0.14)
	node.modulate.a = 0
	return node

func create_stripe(length):
	for child in $Diamonds.get_children():
		child.queue_free()
	
	length = max(length, 3)
	var current_column = 1
	var column_x: float
	var diamond_node: Sprite
	
	while current_column <= length:
		column_x = (current_column - 1) * self.size
		if ((current_column % 2) == 1):
			diamond_node = create_diamond_node()
			$Diamonds.add_child(diamond_node)
			diamond_node.position.x = column_x
			diamond_node.position.y = self.size * -1
			
			diamond_node = create_diamond_node()
			$Diamonds.add_child(diamond_node)
			diamond_node.position.x = column_x
			diamond_node.position.y = self.size * 1
		else:
			diamond_node = create_diamond_node()
			$Diamonds.add_child(diamond_node)
			diamond_node.set_position(Vector2(column_x, 0))
		current_column += 1

func show_stripe(): animate_stripe(true)
func hide_stripe(): animate_stripe(false)

func animate_stripe(show):
	$Tween.stop_all()
	$Tween.remove_all()
	var c = 0
	for child in $Diamonds.get_children():
		if (show):
			$Tween.interpolate_property(child, \"modulate:a\", child.modulate.a, 1, 0.2, Tween.TRANS_LINEAR, Tween.EASE_IN, self.fade_speed * c)
		else:
			$Tween.interpolate_property(child, \"modulate:a\", child.modulate.a, 0, 0.15, Tween.TRANS_LINEAR, Tween.EASE_IN, self.fade_speed * c)
		c += 1
	$Tween.start()

func show_text(text: String):
	if ($TextRect/Text/Tween.is_active()):
		$TextRect/Text/Tween.stop_all()
	$TextRect/Text.text = text
	$TextRect/Text.modulate.a = 0
	$TextRect/Text/Tween.interpolate_property($TextRect/Text, \"modulate:a\", 0, 1, 0.2, Tween.TRANS_LINEAR, Tween.EASE_IN, 0.2)
	$TextRect/Text/Tween.interpolate_property($TextRect/Text, \"visible_characters\", 0, text.length(), 0.2, Tween.TRANS_LINEAR, Tween.EASE_IN, 0.2)
	$TextRect/Text/Tween.start()

func hide_text():
	$TextRect/Text/Tween.stop_all()
	$TextRect/Text/Tween.interpolate_property($TextRect/Text, \"modulate:a\", $TextRect/Text.modulate.a, 0, 0.2, Tween.TRANS_LINEAR, Tween.EASE_IN)
	$TextRect/Text/Tween.start()

func _tween_finished():
	for child in $Diamonds.get_children():
		if (child.modulate.a == 0): child.queue_free()
"

[node name="BaseScene" type="Node"]
script = SubResource( 1 )

[node name="PausedUILayer" type="CanvasLayer" parent="."]
layer = 10

[node name="PausedIndicator" type="TextureRect" parent="PausedUILayer"]
pause_mode = 2
visible = false
margin_right = 1920.0
margin_bottom = 1080.0
mouse_filter = 0
texture = ExtResource( 2 )
expand = true
stretch_mode = 7
script = SubResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PauseTween" type="Tween" parent="PausedUILayer/PausedIndicator"]

[node name="EventProcessor" parent="." instance=ExtResource( 1 )]

[node name="MainCamera" type="Camera2D" parent="."]
position = Vector2( 960, 540 )
rotating = true
current = true
__meta__ = {
"_edit_lock_": true
}

[node name="CursorLayer" type="CanvasLayer" parent="."]
pause_mode = 2
layer = 20
follow_viewport_enable = true
script = SubResource( 3 )

[node name="CursorSprite" type="Node2D" parent="CursorLayer"]
modulate = Color( 1, 1, 1, 0.843137 )
position = Vector2( -512, -512 )
z_index = 200
z_as_relative = false

[node name="CursorSpriteOutside" type="Sprite" parent="CursorLayer/CursorSprite"]
material = SubResource( 4 )
scale = Vector2( 0.08, 0.08 )
texture = ExtResource( 3 )

[node name="CursorSpriteInside" type="Sprite" parent="CursorLayer/CursorSprite"]
material = SubResource( 5 )
scale = Vector2( 0.105, 0.105 )
texture = ExtResource( 4 )

[node name="InfoLayer" type="CanvasLayer" parent="."]
follow_viewport_enable = true
script = SubResource( 6 )

[node name="Microtimer" type="Timer" parent="InfoLayer"]
wait_time = 0.1
one_shot = true

[node name="DiamondStripe" type="Node2D" parent="InfoLayer"]
position = Vector2( 0, 114.716 )
script = SubResource( 7 )

[node name="Tween" type="Tween" parent="InfoLayer/DiamondStripe"]

[node name="Diamonds" type="Node2D" parent="InfoLayer/DiamondStripe"]
modulate = Color( 1, 1, 1, 0.878431 )

[node name="TextRect" type="ReferenceRect" parent="InfoLayer/DiamondStripe"]
margin_top = -36.3144
margin_right = 616.0
margin_bottom = 30.6856
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="RectCalculator" type="Label" parent="InfoLayer/DiamondStripe/TextRect"]
modulate = Color( 1, 1, 1, 0 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 54.0
margin_right = -562.0
rect_min_size = Vector2( 0, 67 )
custom_fonts/font = ExtResource( 5 )
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Text" type="Label" parent="InfoLayer/DiamondStripe/TextRect"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 54.0
margin_right = -362.0
rect_min_size = Vector2( 0, 67 )
custom_fonts/font = ExtResource( 5 )
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Tween" type="Tween" parent="InfoLayer/DiamondStripe/TextRect/Text"]
[connection signal="visibility_changed" from="PausedUILayer/PausedIndicator" to="PausedUILayer/PausedIndicator" method="_on_visibility_changed"]
[connection signal="tween_all_completed" from="PausedUILayer/PausedIndicator/PauseTween" to="PausedUILayer/PausedIndicator" method="_on_tween_all_completed"]
[connection signal="hover_off" from="EventProcessor" to="CursorLayer" method="_off_hover"]
[connection signal="hover_on" from="EventProcessor" to="CursorLayer" method="_on_hover"]
[connection signal="sequence_finished" from="EventProcessor" to="." method="_on_sequence_finished"]
[connection signal="hide_info_text" from="CursorLayer" to="InfoLayer" method="_on_CursorLayer_hide_info_text"]
[connection signal="show_info_text" from="CursorLayer" to="InfoLayer" method="_on_CursorLayer_show_info_text"]
[connection signal="tween_all_completed" from="InfoLayer/DiamondStripe/Tween" to="InfoLayer/DiamondStripe" method="_tween_finished"]

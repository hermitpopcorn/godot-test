[gd_scene load_steps=12 format=2]

[ext_resource path="res://components/base_enemy.tscn" type="PackedScene" id=1]
[ext_resource path="res://images/enemy_sprites/shopee_kompret.png" type="Texture" id=2]
[ext_resource path="res://addons/shaderV/rgba/blendAwithB.gd" type="Script" id=3]

[sub_resource type="VisualShaderNodeTexture" id=4]
source = 2

[sub_resource type="VisualShaderNodeBooleanUniform" id=5]
uniform_name = "apply_color_overlay"

[sub_resource type="VisualShaderNodeIf" id=6]
default_input_values = [ 0, 0.0, 1, 1.0, 2, 1e-05, 3, Vector3( 0, 0, 0 ), 4, Vector3( 0, 0, 0 ), 5, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShaderNodeColorUniform" id=7]
uniform_name = "color_overlay"

[sub_resource type="VisualShaderNodeCustom" id=9]
default_input_values = [ 1, 1.0, 3, 1.0, 4, 1.0 ]
initialized = true
script = ExtResource( 3 )

[sub_resource type="VisualShader" id=10]
resource_local_to_scene = true
code = "shader_type canvas_item;
uniform bool apply_color_overlay;
uniform vec4 color_overlay : hint_color;


// BlendAwithB

vec4 blendAwithBFunc(vec4 _c0l0r_blendA_rgba, vec4 _c0l0r_blendB_rgba, float _fade_blend_c0l0r){
	return mix(_c0l0r_blendA_rgba, _c0l0r_blendB_rgba, _c0l0r_blendB_rgba.a * _fade_blend_c0l0r);
}


void vertex() {
// Output:0

}

void fragment() {
// BooleanUniform:4
	bool n_out4p0 = apply_color_overlay;

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// ColorUniform:6
	vec3 n_out6p0 = color_overlay.rgb;
	float n_out6p1 = color_overlay.a;

// BlendAwithB:7
	float n_in7p4 = 1.00000;
	vec3 n_out7p0;
	float n_out7p1;
	{
		vec4 n_out7p0n_out7p1 = blendAwithBFunc(vec4(n_out3p0, n_out3p1), vec4(n_out6p0, n_out6p1), n_in7p4);
		n_out7p0 = n_out7p0n_out7p1.rgb;
		n_out7p1 = n_out7p0n_out7p1.a;
	}

// If:5
	float n_in5p1 = 1.00000;
	float n_in5p2 = 0.00001;
	vec3 n_out5p0;
	if(abs((n_out4p0 ? 1.0 : 0.0) - n_in5p1) < n_in5p2)
	{
		n_out5p0 = n_out7p0;
	}
	else if((n_out4p0 ? 1.0 : 0.0) < n_in5p1)
	{
		n_out5p0 = n_out3p0;
	}
	else
	{
		n_out5p0 = n_out3p0;
	}

// Output:0
	COLOR.rgb = n_out5p0;
	COLOR.a = n_out3p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -187, 26 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 600, 240 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( -140, 260 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( -60, 60 )
nodes/fragment/5/node = SubResource( 6 )
nodes/fragment/5/position = Vector2( 400, 40 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( -80, 140 )
nodes/fragment/7/node = SubResource( 9 )
nodes/fragment/7/position = Vector2( 140, 140 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 5, 0, 0, 0, 3, 1, 0, 1, 3, 0, 5, 4, 3, 0, 5, 5, 7, 0, 5, 3, 3, 0, 7, 0, 3, 1, 7, 1, 6, 0, 7, 2, 6, 1, 7, 3 )

[sub_resource type="ShaderMaterial" id=11]
resource_local_to_scene = true
shader = SubResource( 10 )
shader_param/apply_color_overlay = false
shader_param/color_overlay = Color( 1, 1, 1, 1 )

[sub_resource type="AtlasTexture" id=12]
resource_local_to_scene = true
flags = 5
atlas = ExtResource( 2 )
region = Rect2( 20, 20, 300, 300 )

[node name="MEGA Kompret" instance=ExtResource( 1 )]
enemy_resource_script = "res://data/enemy_units/mega_kompret/mega_kompret.gd"

[node name="Sprite" parent="." index="0"]
self_modulate = Color( 0.815686, 0.196078, 0.196078, 1 )
material = SubResource( 11 )
margin_top = -333.002
margin_bottom = 338.998
rect_pivot_offset = Vector2( 290, 336 )
texture = ExtResource( 2 )

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="Body" index="0"]
position = Vector2( 0, 17.3529 )
polygon = PoolVector2Array( -99.8707, -348.792, 0.129272, -346.792, 56.1293, -314.792, 74.1293, -242.792, 64.1293, -204.792, 60.1293, -172.792, 76.1293, -154.792, 72.1293, -122.792, 94.1293, -88.7917, 138.129, -34.7917, 148.129, -4.79166, 136.129, 63.2083, 126.129, 99.2083, 120.129, 133.208, 116.129, 161.208, 158.129, 161.208, 192.129, 187.208, 222.129, 205.208, 228.129, 231.208, 194.129, 241.208, 162.129, 245.208, 150.129, 227.208, 150.129, 213.208, 122.129, 209.208, 118.129, 227.208, 80.1293, 239.208, 18.1293, 247.208, 38.1293, 267.208, 54.1293, 305.208, 14.1293, 329.208, -31.8707, 291.208, -43.8707, 247.208, -79.8707, 251.208, -81.8707, 283.208, -103.871, 329.208, -151.871, 327.208, -145.871, 297.208, -111.871, 263.208, -167.871, 237.208, -213.871, 233.208, -215.871, 167.208, -197.871, 51.2083, -205.871, -26.7917, -189.871, -72.7917, -97.8707, -156.792, -107.871, -216.792, -139.871, -284.792 )

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="Head" index="0"]
position = Vector2( 0, 14.6832 )
polygon = PoolVector2Array( -111.871, -302.792, -27.8707, -312.792, 40.1293, -304.792, 60.1293, -276.792, 64.1293, -228.792, 48.1293, -174.792, 26.1293, -150.792, -17.8707, -136.792, -49.8707, -144.792, -96.4008, -159.016, -110.174, -203.514, -115.871, -242.792, -117.871, -272.792 )

[node name="TextureRect" parent="Icon" index="0"]
texture = SubResource( 12 )

[node name="HPBar" parent="." index="4"]
margin_left = 226.0
